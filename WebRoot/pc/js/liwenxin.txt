--  liwenxin.js 使用说明		版本:V1.0

————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
	方法用途		|		调用示例						|		方法名称					|		参数说明
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	$('head').loadJs({				|								|
重新加载指定js:		|		file:'js/xxx.js'			|	loadJs(options)				|	options:json格式:{file:js路径} 
				|	});	  							|	 				 			|			
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|									|								|
提示框: 			|	tsk('账号密码错误');				|	tsk(content)   				|	content:你要提示的字符串									
				|									|								|
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
		 		|	$('.pageDiv').createPage({ 		|								|
				|		pageCount : 10,				|								|
				|		current : 1,				|								|
				|		input_name : 'testS',		|								|
生成分页按钮:		|		backFn : function(page) {	|	createPage(options)			|	options:json格式:{pageCount:总共多少页,input_name:页码框的id} 默认第一页
				|			//page是当前的页码			|								|					{pageCount:总共多少页,current:首次加载第几页,input_name:页码框的id}
				|			//这里是手动点击				|								|
				|			     上下一页触发的回调函数		|								|
				|		}							|								|
				|	})								|								|	 	
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	datek({							|								|	options:json格式:{
				|		title:"温馨提示",				|								|						title:提示标题,		--可以不填,默认为空
时间控制显示层:		|		content:"3秒后消失",			|								|						content:提示内容,		--必填
有边框的显示		|		color : 'red',				|	datek(options)				|						color : 提示字体颜色,	--可以不填,默认#ff4200
				|		imgSrc:"img/default.jpg",	|								|						imgSrc:提示图片路径,	--可以不填,默认为空
				|		datetime:3000				|								|						datetime:显示时长		--可以不填,默认1000毫秒
				|	});								|								|					}
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	datekText({						|								|	options:json格式:{
时间控制显示层:		|		content:"3秒后消失",			|								|						content:提示内容,		--必填
纯文字显示			|		color : 'red',				|	datekText(options)			|						color : 提示字体颜色,	--可以不填,默认#ff4200
				|		datetime:3000				|								|						datetime:显示时长		--可以不填,默认1000毫秒
				|	});								|								|					}
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var num = 10;					|								|
加法:				|	alert(num.add(5));				|	add(num)					|	num:int类型
				|	//输出: 15						|								|	return:结果				
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var num = 10;					|								|
减法:				|	alert(num.sub(5));				|	sub(num)					|	num:int类型
				|	//输出: 5							|								|	return:结果
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var num = 10;					|								|
乘法:				|	alert(num.mul(5));				|	mul(num)					|	num:int类型
				|	//输出: 50						|								|	return:结果			
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var num = 10;					|								|
除法:				|	alert(num.div(5));				|	div(num)					|	num:int类型
				|	//输出: 2							|								|	return:结果
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var tel = "13542151235";		|								|
验证手机号码格式:		|	alert(tel.testPhone());			|	testPhone()					|	return: true:格式正确
				|									|								|			flase:格式错误
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var email = "18916@qq.com";		|								|
验证邮箱格式:		|	alert(email.testEmail());		|	testEmail()					|	return: true:格式正确
				|									|								|			flase:格式错误
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var sfz = "xxxxxxxxxxx";		|								|
验证身份证格式:		|	alert(sfz.isCardNo());			|	isCardNo()					|	return: true:格式正确
				|									|								|			flase:格式错误
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var str = "1354*2151/235";		|								|
去除所有特殊字符:		|	alert(str.stripscript());		|	stripscript()				|	return: 去除后的字符串
				|	//输出: 13542151235				|								|			
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var a = "1354";					|								|	str: 需要比较的字符串或者数字
判断是否相等:		|	var b = "1354";					|	equels(str)					|	return: true:相等	
				|	alert(a.equels(b));				|								|			flase:不相等	
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var str = "135dd4";				|								|	length: 最小的长度
最小长度限制:		|	alert(a.minLength(5));			|	minLength(length)			|	return: true:符合要求	
				|									|								|			flase:小于最小的长度
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var str = "1354";				|								|	length: 最大的长度
最大长度限制:		|	alert(a.maxLength(5));			|	maxLength(length)			|	return: true:符合要求	
				|									|								|			flase:超出最大长度	
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var a = "1354";					|								|	min: 最小的长度		max:最大的长度
长度范围限制:		|	alert(a.betweenLength(6,10));	|	betweenLength(min,max)		|	return: true:符合要求	
				|									|								|			flase:不在指定范围内	
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var fla = [1,3,5,7,9];			|								|	
				|	fla.removeElement(5);			|								|	
指定删除数组中的元素:	|	$.each(fla,function(i,v){		|	removeElement(param)		|	param:你要删除的值
				|		//这时候只会输出:1,3,7,9			|								|
				|		alert(v);					|								|
				|	});								|								|			
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var a = "13*5*4";				|								|	oldV: 要替换的字符		
指定替换全部字符串:	|	alert(a.replaceAll("*","5"));	|	replaceAll(oldV,newV)		|	newV: 新的字符
				|	//输出: 135554					|								|	return: 替换后的值		
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	var a = "2016-12-10 16:36";		|								|		
计算时间与当前时间差:	|	alert(a.getDateDiff());			|	getDateDiff()				| return: 计算后的差，如: X年前，X个月前，X周前，X天前，X个小时前，X分钟前，刚刚	
				|	//输出: 如当前时间是2017-1-5,输出3周前	|								|		
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	$('.dirSpan').mouse({			|								|
				|		//自定义在this左边的手势样式		|								|
			    |		leftCss : 'zuo',			|								| options:json格式:{
			    |		//自定义在this右边边的手势样式		|								|					leftCss:自定义更换后的左边cur手势样式,
更换左右自定义cur鼠标	|		rightCss : 'you',			|								|					rightCss:自定义更换后的右边边cur手势样式,
手势样式			|		leftFn : function(){		|		mouse(options)			|					leftFn:在左边区域点击触发的点击事件,
			    |			alert("你点击的是左边");		|								|					rightFn:在右边区域触发的点击事件
			    |		},rightFn : function(){		|								|				  }
			    |			alert("你点击的是右边");		|								|
			    |		}							|								|
			    |	});								|								|		
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
				|	$('img').imgMagnifier({			|								| options:json格式:{
模仿淘宝商品详情图片	|		showTag : '.fd_show',		|								|					showTag:你要将放大后的图片显示区域的class或者id，如：'.show'或'#show'
				|		background_img:'1.jpg'		|		imgMagnifier(options)	|					background_img:你鼠标选中放大的区域的背景图片，可以不填写
放大				|		size : 100					|								|					size:你鼠标选中放大的区域
				|	});								|								|				   }
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
获取光标在元素中的位置	|	$('input').getCursorPosition();	|		getCursorPosition()		| 
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
设置光标在元素中的位置	| $('input').selectRange(1,2)		|		selectRange(start,end)	|   start:标识起始光标位置  end:标识结束光标位置 
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
自定义状态比较		| mes.signResult()					|		signResult()			|   return:状态码
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
数字格式化			| $.format(20000000, 3, ',');		|		$.format(number,num,str)|   return:格式化后的数字,如：$.format(20000000, 3, ',');  将返回：20,000,000
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
判断是否为空/null	| ifnull(str1,str2);				|		ifnull(str1,str2)		|   return: 如果str1等于了null或者空，则返回str2内容，反之返回str1内容
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
自定义判断			| ifnulls(term,str1,str2);			|		ifnulls(term,str1,str2) |   return: 如果term条件成立则返回str1，反之返回str2内容
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————